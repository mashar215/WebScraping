VSCode上では拡張機能を使用してコンパイラを含んでいるように見えるが実際はコンパイラを含んでいるわけではない。

実際にコンパイルを行うのはVSCodeを動かしている環境に入っているコンパイラ。
今回はg++を使用する。

まずGNUとは?

GNU(GNU is Not Unix)はUNIXと上位互換性のあるフリーな総合ソフトウェアのこと。
システムにはOSカーネル、シェル、エディタ、プログラム言語処理等のハードウェア以外のソフトウェア
すべてを含んでいる。

カーネルだけはLinuxカーネルを使用している。

まとめると、
カーネル以外のソフトウェアを総称したものであるといえる。
だからGNUとつけば、GNU用の何かしらのソフトウェアであるといえる。

GNU Compiler...GNUのコンパイラやろ。
GNUコンパイラの中にはJava、C++とかいろんな言語のコンパイラが格納されている。

g++やgccもその一部である。

gccコンパイラとg++コンパイラの違い。

ざっくりいうと

g++...C++言語用の基本的なコンパイラ+GNUの拡張機能
gcc...C言語用の基本的なコンパイラ+GNUの拡張機能

gdbデバッガとは
GNUソフトウェア群に入っているデバッガの一つ。Unixの標準的なCUIデバッガの一つ

今回のバイナリは実行結果を出力する前に強制終了するので、
コアダンプファイルを作成してみる。

コアダンプファイルとは、プログラムが強制終了する前に、
その時点でプログラムが使用しているメモリ空間の内容を丸ごと写し取ってファイルに保存したもの。

要するにOSがプログラムを強制的に終了させる前の
メモリの状態をファイルに残すこと。

通例、わかりやすく書くために

C言語なら

CC = gcc 

C++言語なら、

CXX = g++

になる。

またオリジナルのコンパイラを使用するのであれば、フルパスを指定して
書く必要が出てくる。

.so拡張子
Linuxで用いられる共有ライブラリのファイル形式の１つ。shared objectの略
動的リンク用のライブラリである。

.a拡張子
archiveの略
静的リンク用のライブラリ

同じところに.aと.soが存在する場合、.soライブラリのほうが優先されるらしい。
